/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package yatzy;

import javax.swing.JOptionPane; // importerar för att göra MessageDialog


/**
 *
 * @author wiktoria
 */
public class YatzyFrame extends javax.swing.JFrame {
int antal; // den variabel räknar tärningar, alla spelare kan kasta tärningar tre gånger på en tur
int x = 0; // den variabeln har jag skapat för att börja om spelet efter varje spelare, om en spelare har spelat så den variabel är likaa med noll igen
boolean spelare1 = true; // den variabeln kontrollerar vilken spelare spelar nu, vilken spelare har sin tur nu
int summa, summa2; // variabeln summa lagrar alla poäng av första spelare, variabeln summa2 lagrar poäng av andra spelare, men det lagrar poängen bara från ettor till sexor
int total, total2;// lagrar alla poängen från ettor och sexor och också från 1par till yatzy, total = första spelare, total2 = andra spelare

    /**
     * Creates new form YatzyFrame
     */
    public YatzyFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblSpelare1 = new javax.swing.JLabel();
        lblSpelare2 = new javax.swing.JLabel();
        btnEttor = new javax.swing.JButton();
        btnTvaor = new javax.swing.JButton();
        btnTreor = new javax.swing.JButton();
        btnFyror = new javax.swing.JButton();
        btnFemmor = new javax.swing.JButton();
        btnSexor = new javax.swing.JButton();
        btnSumma = new javax.swing.JButton();
        btnBonus = new javax.swing.JButton();
        lblEttor1 = new javax.swing.JLabel();
        lblTvaor1 = new javax.swing.JLabel();
        lblTreor1 = new javax.swing.JLabel();
        lblFyror1 = new javax.swing.JLabel();
        lblFemmor1 = new javax.swing.JLabel();
        lblSexor1 = new javax.swing.JLabel();
        lblSumma1 = new javax.swing.JLabel();
        lblBonus1 = new javax.swing.JLabel();
        lblEttor2 = new javax.swing.JLabel();
        lblTvaor2 = new javax.swing.JLabel();
        lblTreor2 = new javax.swing.JLabel();
        lblFyror2 = new javax.swing.JLabel();
        lblFemmor2 = new javax.swing.JLabel();
        lblSexor2 = new javax.swing.JLabel();
        lblSumma2 = new javax.swing.JLabel();
        lblBonus2 = new javax.swing.JLabel();
        lblSpelareEtt = new javax.swing.JLabel();
        lblSpelareTva = new javax.swing.JLabel();
        btn1par = new javax.swing.JButton();
        btn2par = new javax.swing.JButton();
        btnTretal = new javax.swing.JButton();
        btnFyrtal = new javax.swing.JButton();
        btnLitenStage = new javax.swing.JButton();
        btnStorStage = new javax.swing.JButton();
        btnKak = new javax.swing.JButton();
        btnChans = new javax.swing.JButton();
        btnYatzy = new javax.swing.JButton();
        btnTotalt = new javax.swing.JButton();
        lbl1par1 = new javax.swing.JLabel();
        lbl1par2 = new javax.swing.JLabel();
        lbl2par1 = new javax.swing.JLabel();
        lbl2par2 = new javax.swing.JLabel();
        lblTretal1 = new javax.swing.JLabel();
        lblTretal2 = new javax.swing.JLabel();
        lblFyrtal1 = new javax.swing.JLabel();
        lblFyrtal2 = new javax.swing.JLabel();
        lblLitenStage1 = new javax.swing.JLabel();
        lblLitenStage2 = new javax.swing.JLabel();
        lblStorStage1 = new javax.swing.JLabel();
        lblStorStage2 = new javax.swing.JLabel();
        lblKak1 = new javax.swing.JLabel();
        lblKak2 = new javax.swing.JLabel();
        lblChans1 = new javax.swing.JLabel();
        lblYatzy1 = new javax.swing.JLabel();
        lblChans2 = new javax.swing.JLabel();
        lblYatzy2 = new javax.swing.JLabel();
        lblTotalt1 = new javax.swing.JLabel();
        lblTotalt2 = new javax.swing.JLabel();
        btnKasta = new javax.swing.JButton();
        btnTarning1 = new javax.swing.JButton();
        btnTarning2 = new javax.swing.JButton();
        btnTarning3 = new javax.swing.JButton();
        btnTarning4 = new javax.swing.JButton();
        btnTarning5 = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(204, 204, 255));
        jLabel1.setFont(new java.awt.Font("Phosphate", 0, 36)); // NOI18N
        jLabel1.setText("Yatzy");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Klicka på de tärningar som du vill slå om");

        lblSpelare1.setForeground(new java.awt.Color(102, 0, 102));
        lblSpelare1.setText("SPELARE 1");
        lblSpelare1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblSpelare2.setForeground(new java.awt.Color(102, 0, 102));
        lblSpelare2.setText("SPELARE 2");
        lblSpelare2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnEttor.setText("Ettor");
        btnEttor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEttorActionPerformed(evt);
            }
        });

        btnTvaor.setText("Tvåor");
        btnTvaor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTvaorActionPerformed(evt);
            }
        });

        btnTreor.setText("Treor");
        btnTreor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTreorActionPerformed(evt);
            }
        });

        btnFyror.setText("Fyror");
        btnFyror.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFyrorActionPerformed(evt);
            }
        });

        btnFemmor.setText("Femmor");
        btnFemmor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFemmorActionPerformed(evt);
            }
        });

        btnSexor.setText("Sexor");
        btnSexor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSexorActionPerformed(evt);
            }
        });

        btnSumma.setForeground(new java.awt.Color(0, 204, 0));
        btnSumma.setText("Summa");
        btnSumma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSummaActionPerformed(evt);
            }
        });

        btnBonus.setForeground(new java.awt.Color(204, 0, 204));
        btnBonus.setText("Bonus");

        lblEttor1.setBackground(new java.awt.Color(0, 255, 255));
        lblEttor1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTvaor1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTreor1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblFyror1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblFemmor1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblSexor1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblSumma1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblBonus1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblEttor2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTvaor2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTreor2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblFyror2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblFemmor2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblSexor2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblSumma2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblBonus2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblSpelareEtt.setForeground(new java.awt.Color(102, 0, 102));
        lblSpelareEtt.setText("SPELARE 1");
        lblSpelareEtt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblSpelareTva.setForeground(new java.awt.Color(102, 0, 102));
        lblSpelareTva.setText("SPELARE 2");
        lblSpelareTva.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btn1par.setText("1 par");
        btn1par.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btn1par.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1parActionPerformed(evt);
            }
        });

        btn2par.setText("2 par");
        btn2par.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btn2par.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2parActionPerformed(evt);
            }
        });

        btnTretal.setText("Tretal");
        btnTretal.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnTretal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTretalActionPerformed(evt);
            }
        });

        btnFyrtal.setText("Fyrtal");
        btnFyrtal.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnFyrtal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFyrtalActionPerformed(evt);
            }
        });

        btnLitenStage.setText("Liten Stege");
        btnLitenStage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnLitenStage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLitenStageActionPerformed(evt);
            }
        });

        btnStorStage.setText("Stor Stege");
        btnStorStage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnStorStage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStorStageActionPerformed(evt);
            }
        });

        btnKak.setText("Kåk");
        btnKak.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnKak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKakActionPerformed(evt);
            }
        });

        btnChans.setText("Chans");
        btnChans.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnChans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChansActionPerformed(evt);
            }
        });

        btnYatzy.setText("Yatzy");
        btnYatzy.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnYatzy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYatzyActionPerformed(evt);
            }
        });

        btnTotalt.setForeground(new java.awt.Color(204, 0, 204));
        btnTotalt.setText("Totalt");
        btnTotalt.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        lbl1par1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbl1par2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbl2par1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbl2par2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTretal1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTretal2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblFyrtal1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblFyrtal2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblLitenStage1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblLitenStage2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblStorStage1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblStorStage2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblKak1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblKak2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblChans1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblYatzy1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblChans2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblYatzy2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTotalt1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTotalt2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnKasta.setFont(new java.awt.Font("Apple Braille", 1, 15)); // NOI18N
        btnKasta.setForeground(new java.awt.Color(0, 0, 204));
        btnKasta.setText("Kasta Tärningarna");
        btnKasta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKastaActionPerformed(evt);
            }
        });

        btnTarning1.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        btnTarning1.setText("Tärning");
        btnTarning1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTarning1ActionPerformed(evt);
            }
        });

        btnTarning2.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        btnTarning2.setText("Tärning");
        btnTarning2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTarning2ActionPerformed(evt);
            }
        });

        btnTarning3.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        btnTarning3.setText("Tärning");
        btnTarning3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTarning3ActionPerformed(evt);
            }
        });

        btnTarning4.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        btnTarning4.setText("Tärning");
        btnTarning4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTarning4ActionPerformed(evt);
            }
        });

        btnTarning5.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        btnTarning5.setText("Tärning");
        btnTarning5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTarning5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(lblSpelare1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(lblSpelare2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnEttor, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblEttor1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblEttor2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTvaor, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTvaor1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblTvaor2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTreor, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTreor1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblTreor2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnSexor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnFyror, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnFemmor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblFyror1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblFyror2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblFemmor1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblFemmor2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblSexor1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblSexor2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSumma, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSumma1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblSumma2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblBonus1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblBonus2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnFyrtal, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblFyrtal1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblFyrtal2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTretal, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTretal1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblTretal2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn2par, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl2par1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbl2par2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnStorStage, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblStorStage1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblStorStage2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnKak, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblKak1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblKak2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnChans, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblChans1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblChans2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnYatzy, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblYatzy1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblYatzy2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTotalt, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTotalt1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblTotalt2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnLitenStage, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblLitenStage1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblLitenStage2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn1par, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl1par1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbl1par2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(lblSpelareEtt, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSpelareTva, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnTarning1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTarning2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTarning3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTarning4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTarning5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(btnKasta)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(btnKasta, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTarning1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTarning2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTarning3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTarning4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTarning5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblSpelare1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblSpelare2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblSpelareEtt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblSpelareTva, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblEttor1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnEttor)
                                    .addComponent(lblEttor2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btn1par)
                                    .addComponent(lbl1par1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl1par2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnTvaor)
                                .addComponent(lblTvaor1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTvaor2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn2par)
                                .addComponent(lbl2par1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl2par2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTreor)
                            .addComponent(lblTreor1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTreor2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTretal)
                            .addComponent(lblTretal1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTretal2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFyror)
                            .addComponent(lblFyror1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFyror2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFemmor)
                            .addComponent(lblFemmor1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFemmor2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSexor)
                            .addComponent(lblSexor1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSexor2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSumma)
                            .addComponent(lblSumma1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSumma2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBonus)
                            .addComponent(lblBonus1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBonus2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFyrtal)
                            .addComponent(lblFyrtal1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFyrtal2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLitenStage)
                            .addComponent(lblLitenStage1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLitenStage2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnStorStage)
                            .addComponent(lblStorStage1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblStorStage2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnKak)
                            .addComponent(lblKak1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblKak2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnChans)
                            .addComponent(lblChans1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblChans2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnYatzy)
                            .addComponent(lblYatzy1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblYatzy2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTotalt)
                    .addComponent(lblTotalt1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTotalt2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jLabel3.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * den metoden börjar spelet, den kastar tärningarna och ge dem random tal, det också beräknar antal kast
 * det också gör att om spelare har slutat sin runda så knappar för tärningarna är disabled 
 * @param evt 
 */
    private void btnKastaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKastaActionPerformed
        btnKasta.setEnabled(false);
        if (x==0){
        if(spelare1 == true)   {
        lblSpelare2.setEnabled(false);
        lblSpelareTva.setEnabled(false);
        }
        btnTarning1.setText(Integer.toString((int)(Math.random() * 6) + 1));
       
        btnTarning2.setText(Integer.toString((int)(Math.random() * 6) + 1));
        
        btnTarning3.setText(Integer.toString((int)(Math.random() * 6) + 1));
        
        btnTarning4.setText(Integer.toString((int)(Math.random() * 6) + 1));
        
        btnTarning5.setText(Integer.toString((int)(Math.random() * 6) + 1));
        x++;
        }
        String dice1 = btnTarning1.getText();
        String dice2 = btnTarning2.getText();
        String dice3 = btnTarning3.getText();
        String dice4 = btnTarning4.getText();
        String dice5 = btnTarning5.getText();
        
        if (dice1.compareTo("?") == 0 ){
         btnTarning1.setText(Integer.toString((int)(Math.random() * 6) + 1));   
        }
        
        if (dice2.compareTo("?") == 0 ){
         btnTarning2.setText(Integer.toString((int)(Math.random() * 6) + 1));   
        }
        if (dice3.compareTo("?") == 0 ){
         btnTarning3.setText(Integer.toString((int)(Math.random() * 6) + 1));   
        }
        if (dice4.compareTo("?") == 0 ){
         btnTarning4.setText(Integer.toString((int)(Math.random() * 6) + 1));   
        }
        if (dice5.compareTo("?") == 0 ){
         btnTarning5.setText(Integer.toString((int)(Math.random() * 6) + 1));   
        }
       
        antal++;
        
        if ( antal > 2){
            btnTarning1.setEnabled(false);
            btnTarning2.setEnabled(false);
            btnTarning3.setEnabled(false);
            btnTarning4.setEnabled(false);
            btnTarning5.setEnabled(false);
        }
      
         
      
      
       
    }//GEN-LAST:event_btnKastaActionPerformed
    public void SorteraFallande(int[] lista) {
        int i;
        if (lista.length < 2) return;
        int temp;
        
        for (int n = 1; n < lista.length; n++){
            temp = lista[n];
            i = n - 1;
            
        while ( i >= 0 && lista[i] < temp) {
            lista[i + 1] = lista[i];
            i--;
        }
        lista[i+1] = temp;
                    
        }
    }
    
    /**
     * den metoden kontrollerar om alla positioner är fyllt och vem som har vunnits, 
     * det tittar if alla rutor/label är fyllt
     * det kontrollerar vem som har mer poäng
     * och lämplig meddelande visas på skärmen
     */
    public void WhoWins(){
        if (!lblEttor1.getText().equals("") && !lblEttor2.getText().equals("") && !lblTvaor1.getText().equals("") &&
                !lblTvaor2.getText().equals("") &&!lblTreor1.getText().equals("") &&!lblTreor2.getText().equals("") 
                &&!lblFyror1.getText().equals("") &&!lblFyror2.getText().equals("") 
                &&!lblFemmor1.getText().equals("") &&!lblFemmor2.getText().equals("") &&!lblSexor1.getText().equals("") 
                && !lblSexor2.getText().equals("") &&!lbl1par1.getText().equals("") &&!lbl1par2.getText().equals("") 
                        && !lbl2par1.getText().equals("") &&!lbl2par2.getText().equals("") &&!lblTretal1.getText().equals("")
                && !lblFyrtal1.getText().equals("") &&!lblFyrtal2.getText().equals("") &&!lblLitenStage1.getText().equals("")
                && !lblLitenStage2.getText().equals("") &&!lblStorStage1.getText().equals("") &&!lblStorStage2.getText().equals("")
                && !lblKak1.getText().equals("") &&!lblKak2.getText().equals("") &&!lblChans1.getText().equals("")
                && !lblChans2.getText().equals("") &&!lblYatzy1.getText().equals("") &&!lblYatzy2.getText().equals("")){
            if(total > total2){
             JOptionPane.showMessageDialog(null,
                    "SPELARE 1 HAR VUNNIT. GRATULERAR!!!",
                    "Meddelande",
                    JOptionPane.INFORMATION_MESSAGE);   
            }
            else{
             JOptionPane.showMessageDialog(null,
                    "SPELARE 2 HAR VUNNIT. GRATULERAR!!!",
                    "Meddelande",
                    JOptionPane.INFORMATION_MESSAGE);   
            }
                    
        }
    }
    
    
    
    /**
     * den metoden kontrollerar om spelaren kan få bonus, man får bonus om man har 63 eller mer summa poäng dvs från ettor till sexor
     * om man har det så får man 50 extra poäng
     */
    
    public void ifBonus(){
        
        if (summa >= 63) {
            total += 50;
         lblBonus1.setText("50");
        }
        if (summa2 >= 63) {
            total2 += 50;
            lblBonus2.setText("50");
        }
        
    }
    /**
     * den metoden läser talen från tärningarna
     * det lagrar dem i fältet
     * 
     * @return 
     */
    public int[] lasInTal(){
         int []tal = new int[5]; //skapa fältet 
         //läs in talen från alla text field
         
         tal[0] = Integer.valueOf(btnTarning1.getText());
         tal[1] = Integer.valueOf(btnTarning2.getText());
         tal[2] = Integer.valueOf(btnTarning3.getText());
         tal[3]= Integer.valueOf(btnTarning4.getText());
         tal[4] = Integer.valueOf(btnTarning5.getText());
         return tal;
        
    }
    /**
     * den metoden har jag skapat för att visa vilken spelare har sin tur nu 
     * man skickar en parameter till metoden, det är boolean
     * den metoden gäller bara etiketter som heter Spelare 1 och Spelare 2
     * @param spelare 
     */
    public void lasSpelare(boolean spelare){
        if (spelare == true){
         lblSpelare1.setEnabled(true);
            lblSpelareEtt.setEnabled(true);   
        lblSpelare2.setEnabled(false);
            lblSpelareTva.setEnabled(false);    
        }
        else {
         lblSpelare1.setEnabled(false);
            lblSpelareEtt.setEnabled(false);
            lblSpelare2.setEnabled(true);
            lblSpelareTva.setEnabled(true);   
        }
    }
    /**
     * metoden som förbereder tärningarna för nästa spelare
     * den gör att talen på tärningarna raderas och knappar är tillgängligt igen
     * den äterställer variabelna antal och x till noll så att man kan börja om
     */
    public void BorjaOm(){
    btnTarning1.setText("?");
    btnTarning2.setText("?");
    btnTarning3.setText("?");
    btnTarning4.setText("?");
    btnTarning5.setText("?");
    btnTarning1.setEnabled(true);
            btnTarning2.setEnabled(true);
            btnTarning3.setEnabled(true);
            btnTarning4.setEnabled(true);
            btnTarning5.setEnabled(true);
             btnKasta.setEnabled(true);
        antal = 0;
        x = 0;
    }
    /**
     * den metoden sorterar talen stigande 
     * som parameter skickar man integer fältet 
     * 
     * @param lista 
     */
    public void SorteraStigande (int [] lista){
        int i;
        if ( lista.length < 2) return;
        
        int temp;
        
        for (int n=1; n < lista.length; n++) {
            temp = lista[n];
            i = n -1;
            
        while (i >= 0 && lista[i] > temp) {
            lista[i + 1] = lista[i];
            i --;
        }
        lista[i+1] = temp;
        
        }}
  
    
    
    /**
     * metoden som är ansvarig för första tärning och om man kklickar på den så det visar "?" tecken 
     * det gör också att man kan kasta tärningar igen 
     * @param evt 
     */
    private void btnTarning1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTarning1ActionPerformed
        
        btnTarning1.setText("?");
        btnKasta.setEnabled(true);
       
       
       
    }//GEN-LAST:event_btnTarning1ActionPerformed

    private void btnTarning2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTarning2ActionPerformed
        
        btnTarning2.setText("?");
       btnKasta.setEnabled(true);
    }//GEN-LAST:event_btnTarning2ActionPerformed

    private void btnTarning3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTarning3ActionPerformed
  
      btnTarning3.setText("?");
       btnKasta.setEnabled(true);
    }//GEN-LAST:event_btnTarning3ActionPerformed

    private void btnTarning4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTarning4ActionPerformed
 
      btnTarning4.setText("?");
      btnKasta.setEnabled(true);
    }//GEN-LAST:event_btnTarning4ActionPerformed

    private void btnTarning5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTarning5ActionPerformed
       
        btnTarning5.setText("?");
        btnKasta.setEnabled(true);
    }//GEN-LAST:event_btnTarning5ActionPerformed
/**
 * den metoden för det första tilldelar värden som finns inom två label till Strängar , så att man vet vad är i dem 
 * sen skapar man fältet och använder metoden lasInTal för att läsa vilka siffor är i alla tärningar
 * det kontrollerar om det finns fel , att man har inte kastat tarningarna
 * sen skapar man variabeln number som ska lagra värde från tärningarna
 * sen ser det om man lyckats ha en träff
 * sen kontrollerar det om användaren har redan vald den här position, om ja så lämplig meddelande ska visas
 * sen ser det vilken spelare spela och lagrar poängen i spelarens lämplig ruta
 * det ändrar värde av boolean spelare1 för att den andra spelaren kunde spela
 * det lagrar poängen i summa och total variabeln , men lagrar bara i total variabeln när det gäller rutar från 1 par till Yatzy
 * sen metoden BorjarOm är använd för att återställa och förbereda spelet för andra spelare
 * och till slut ser det om två rutor för spelare 1 och spelare 2 är redan fyllt och om de är så gör det att knapp är inte längre tillgänglig
 * det är bra för att visa klar och tydlig vilka position är kvar
 * @param evt 
 */
    private void btnEttorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEttorActionPerformed
       String check = lblEttor1.getText();
       String check2 = lblEttor2.getText();
       
       int tal[];
       try{
         tal = lasInTal(); // man skickar fältet tal till lasInTal metoden och tilldelar tal till metoden
       }
       catch (java.lang.NumberFormatException e){
            JOptionPane.showMessageDialog(null,
                    "Du måste slå innan du kan välja kategori.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
           return;
        }
         int number = 0;
         // här kontrollerar det om det finns talet 1 på tärningarna
        if( tal[0] == 1 ){
         number++;   
        }
        if( tal[1] == 1 ){
         number++;   
        }
        if( tal[2] == 1 ){
         number++;   
        }
        if( tal[3] == 1 ){
         number++;   
        }
        if( tal[4] == 1 ){
         number++;   
        }
        if (!check.equals("") && spelare1 == true ){// om lalbel1 är inte tom och den första spelare spelar så lämplig meddelande ska visas
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
        }
          if (!check2.equals("") && spelare1 == false ){ // om lalbel2 är inte tom och den andra spelare spelar så lämplig meddelande ska visas
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
         
        }
        if(check.equals("") && spelare1 == true){ // om label är tom och spelare 1 spelar så tilldelar poängen till den labeln 
         
        lblEttor1.setText(Integer.toString(number));
        summa += number;
        lblSumma1.setText(Integer.toString(summa));
        total+=number;
        lblTotalt1.setText(Integer.toString(total));
        spelare1 = false;
        lasSpelare(spelare1);
        }
        
        else{
        lblEttor2.setText(Integer.toString(number));
        summa2 += number;
        lblSumma2.setText(Integer.toString(summa2));
        total2+=number;
        lblTotalt2.setText(Integer.toString(total2));
        spelare1 = true;
        lasSpelare(spelare1);
       
        }
        
        
        BorjaOm();
         if(check.isEmpty() && check2.isEmpty() ){
        btnEttor.setEnabled(true); 
        }
        else {
        btnEttor.setEnabled(false);     
        }
        WhoWins(); // här kontrollerar det om kanske alla positioner är fyllt och spelet är slut så tittar det vem som har vunnits
        ifBonus();
        
    }//GEN-LAST:event_btnEttorActionPerformed

    private void btnTvaorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTvaorActionPerformed
        String check = lblTvaor1.getText();
        String check2 = lblTvaor2.getText();
        int tal[]; //skapa fältet 
         try{
         tal = lasInTal();
         }
         catch (java.lang.NumberFormatException e){
            JOptionPane.showMessageDialog(null,
                    "Du måste slå innan du kan välja kategori.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
           return;
        }
         int number = 0;
        if( tal[0] == 2 ){
         number+=2;   
        }
        if( tal[1] == 2 ){
         number+=2;     
        }
        if( tal[2] == 2 ){
         number+=2;   
        }
        if( tal[3] == 2 ){
         number+=2;     
        }
        if( tal[4] == 2 ){
         number+=2;    
        }
        if (!check.equals("") && spelare1 == true ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
        }
          if (!check2.equals("") && spelare1 == false ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
         
        }
        
        if(check.compareTo("")== 0 && spelare1 == true){
        lblTvaor1.setText(Integer.toString(number));
        spelare1 = false;
        lasSpelare(spelare1);
        summa += number;
        lblSumma1.setText(Integer.toString(summa));
        total+=number;
        lblTotalt1.setText(Integer.toString(total));
        }
    
        else{
           
        lblTvaor2.setText(Integer.toString(number)); 
        spelare1 = true;
        lasSpelare(spelare1);
        summa2 += number;
        lblSumma2.setText(Integer.toString(summa2));
        total2+=number;
        lblTotalt2.setText(Integer.toString(total2));
        }
        
        BorjaOm();
         if(check.isEmpty() && check2.isEmpty() ){
        btnTvaor.setEnabled(true); 
        }
        else {
        btnTvaor.setEnabled(false);     
        }
         WhoWins(); 
        ifBonus();
    }//GEN-LAST:event_btnTvaorActionPerformed

    private void btnTreorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTreorActionPerformed
        String check = lblTreor1.getText();
        String check2 = lblTreor2.getText();
        int tal[]; //skapa fältet 
        try{
         tal = lasInTal();
        }
        catch (java.lang.NumberFormatException e){
            JOptionPane.showMessageDialog(null,
                    "Du måste slå innan du kan välja kategori.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
           return;
        }
         int number = 0;
        if( tal[0] == 3 ){
         number+=3;   
        }
        if( tal[1] == 3 ){
         number+=3;     
        }
        if( tal[2] == 3 ){
         number+=3;   
        }
        if( tal[3] == 3 ){
         number+=3;     
        }
        if( tal[4] == 3 ){
         number+=3;    
        }
        if (!check.equals("") && spelare1 == true ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
        }
          if (!check2.equals("") && spelare1 == false ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
         
        }
        
        if(check.compareTo("")== 0 && spelare1 == true){
        lblTreor1.setText(Integer.toString(number));
        spelare1 = false;
        lasSpelare(spelare1);
        summa += number;
        lblSumma1.setText(Integer.toString(summa));
        total+=number;
        lblTotalt1.setText(Integer.toString(total));
        }
        else{
           
        lblTreor2.setText(Integer.toString(number)); 
        spelare1 = true;
        lasSpelare(spelare1);
        summa2 += number;
        lblSumma2.setText(Integer.toString(summa2));
        total2+=number;
        lblTotalt2.setText(Integer.toString(total2));
        }
        
        
         BorjaOm();
         
        if(check.isEmpty() && check2.isEmpty() ){
        btnTreor.setEnabled(true); 
        }
        else {
        btnTreor.setEnabled(false);     
        }
        WhoWins(); 
         ifBonus();
    }//GEN-LAST:event_btnTreorActionPerformed

    private void btnFyrorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFyrorActionPerformed
        String check = lblFyror1.getText();
        String check2 = lblFyror2.getText();
        int tal[]; //skapa fältet 
        try{
         tal = lasInTal();
        }
        catch (java.lang.NumberFormatException e){
            JOptionPane.showMessageDialog(null,
                    "Du måste slå innan du kan välja kategori.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
           return;
        }
         int number = 0;
        if( tal[0] == 4 ){
         number+=4;   
        }
        if( tal[1] == 4 ){
         number+=4;     
        }
        if( tal[2] == 4 ){
         number+=4;   
        }
        if( tal[3] == 4 ){
         number+=4;     
        }
        if( tal[4] == 4 ){
         number+=4;    
        }
        if (!check.equals("") && spelare1 == true ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
        }
          if (!check2.equals("") && spelare1 == false ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
         
        }
        
        if(check.compareTo("")== 0 && spelare1 == true){
        lblFyror1.setText(Integer.toString(number));
        spelare1 = false;
        lasSpelare(spelare1);
        summa += number;
        lblSumma1.setText(Integer.toString(summa));
        total+=number;
        lblTotalt1.setText(Integer.toString(total));
        }
        else{
           
        lblFyror2.setText(Integer.toString(number)); 
        spelare1 = true;
        lasSpelare(spelare1);
        summa2 += number;
        lblSumma2.setText(Integer.toString(summa2));
        total2+=number;
        lblTotalt2.setText(Integer.toString(total2));
        }
        
        BorjaOm();
        
         if(check.isEmpty() && check2.isEmpty() ){
        btnFyror.setEnabled(true); 
        }
        else {
        btnFyror.setEnabled(false);     
        }
         WhoWins();
          ifBonus();
    }//GEN-LAST:event_btnFyrorActionPerformed

    private void btnFemmorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFemmorActionPerformed
       String check = lblFemmor1.getText();
       String check2 = lblFemmor2.getText();
        int tal[]; //skapa fältet 
        try{
         tal = lasInTal();
        }
        catch (java.lang.NumberFormatException e){
            JOptionPane.showMessageDialog(null,
                    "Du måste slå innan du kan välja kategori.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
           return;
        }
         int number = 0;
        if( tal[0] == 5 ){
         number+=5;   
        }
        if( tal[1] == 5 ){
         number+=5;     
        }
        if( tal[2] == 5 ){
         number+=5;   
        }
        if( tal[3] == 5 ){
         number+=5;     
        }
        if( tal[4] == 5 ){
         number+=5;    
        }
        if (!check.equals("") && spelare1 == true ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
        }
          if (!check2.equals("") && spelare1 == false ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
         
        }
        
        if(check.equals("") && spelare1 == true){
        lblFemmor1.setText(Integer.toString(number));
        
        summa += number;
        lblSumma1.setText(Integer.toString(summa));
        total+=number;
        lblTotalt1.setText(Integer.toString(total));
        spelare1 = false;
        lasSpelare(spelare1);
        
        }
        else{
        lblFemmor2.setText(Integer.toString(number)); 
        summa2 += number;
        lblSumma2.setText(Integer.toString(summa2));
        total2+=number;
        lblTotalt2.setText(Integer.toString(total2));
        spelare1 = true;
        lasSpelare(spelare1);
        }
        
        BorjaOm();
         if(check.isEmpty() && check2.isEmpty() ){
        btnFemmor.setEnabled(true); 
        }
        else {
        btnFemmor.setEnabled(false);     
        }
        WhoWins(); 
         ifBonus();
    }//GEN-LAST:event_btnFemmorActionPerformed

    private void btnSexorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSexorActionPerformed
        String check = lblSexor1.getText();
        String check2 = lblSexor2.getText();
        int tal[]; //skapa fältet 
       try{
         tal = lasInTal();
       }
       catch (java.lang.NumberFormatException e){
            JOptionPane.showMessageDialog(null,
                    "Du måste slå innan du kan välja kategori.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
           return;
        }
       
         int number = 0;
        if( tal[0] == 6 ){
         number+=6;   
        }
        if( tal[1] == 6 ){
         number+=6;     
        }
        if( tal[2] == 6 ){
         number+=6;   
        }
        if( tal[3] == 6 ){
         number+=6;     
        }
        if( tal[4] == 6 ){
         number+=6;    
        }
        if (!check.equals("") && spelare1 == true ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
        }
          if (!check2.equals("") && spelare1 == false ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
         
        }
        
        if(check.compareTo("")== 0 && spelare1 == true){
        lblSexor1.setText(Integer.toString(number));
        spelare1 = false;
        lasSpelare(spelare1);
        summa += number;
        lblSumma1.setText(Integer.toString(summa));
        total+=number;
        lblTotalt1.setText(Integer.toString(total));
        }
        else{
           
        lblSexor2.setText(Integer.toString(number)); 
        spelare1 = true;
        lasSpelare(spelare1);
        summa2 += number;
        lblSumma2.setText(Integer.toString(summa2));
        total2+=number;
        lblTotalt2.setText(Integer.toString(total2));
        }
          
        
        BorjaOm();
        if(check.isEmpty() && check2.isEmpty() ){
        btnSexor.setEnabled(true); 
        }
        else {
        btnSexor.setEnabled(false);     
        }
        WhoWins(); 
         ifBonus();
    }//GEN-LAST:event_btnSexorActionPerformed

    private void btnSummaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSummaActionPerformed
        //ingen anvädning men kan inte radera den metoden
    }//GEN-LAST:event_btnSummaActionPerformed

    private void btn1parActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1parActionPerformed
       String check = lbl1par1.getText();
        String check2 = lbl1par2.getText();
        int tal[]; //skapa fältet 
       try{
         tal = lasInTal();
       }
       catch (java.lang.NumberFormatException e){
            JOptionPane.showMessageDialog(null,
                    "Du måste slå innan du kan välja kategori.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
           return;
        }
         // här har jag använd metoden som sorterar talen 
         // det är bra därför att det är lättare att hitta par 
         SorteraFallande(tal); 
         
         int number = 0;
        // om första talet är lika med andra talet så är det ett par
        // om inte så tittar det vidare om den andra talet är lika med den tredje talet och så vidare
        // till slut använder det det paret som har störst värde
         if (tal[0] == tal[1]){ 
             number = tal[0] + tal[1];
         }
         else if (tal[1] == tal[2]){ 
             number = tal[1] + tal[2];
         }
         else if (tal[2] == tal[3]){
             number = tal[2] + tal[3];
         }
         else if (tal[3] == tal[4]){
             number = tal[3] + tal[4];
         }
        
        if (!check.equals("") && spelare1 == true ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
        }
          if (!check2.equals("") && spelare1 == false ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
         
        } 
         
        if(check.compareTo("")== 0 && spelare1 == true){
        lbl1par1.setText(Integer.toString(number));
        spelare1 = false;
        lasSpelare(spelare1);
        total+=number;
        lblTotalt1.setText(Integer.toString(total));
        }
        
        else{
          
        lbl1par2.setText(Integer.toString(number)); 
        spelare1 = true;
        lasSpelare(spelare1);
        
        total2+=number;
        lblTotalt2.setText(Integer.toString(total2));
        }
        
        
        BorjaOm();
        if(check.isEmpty() && check2.isEmpty() ){
        btn1par.setEnabled(true); 
        }
        else {
        btn1par.setEnabled(false);     
        }
        WhoWins(); 
    }//GEN-LAST:event_btn1parActionPerformed

    private void btn2parActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2parActionPerformed
        String check = lbl2par1.getText();
        String check2 = lbl2par2.getText();
        int tal[]; //skapa fältet 
       try{
         tal = lasInTal();
       }
       catch (java.lang.NumberFormatException e){
            JOptionPane.showMessageDialog(null,
                    "Du måste slå innan du kan välja kategori.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
           return;
        }
         SorteraFallande(tal);// talen är sorterade stigande
         int number = 0;
        // här tittar det på de sorterade talen, om det första talet och andra är lika och om det tredje talet är lika med det fjärde talet
        // om det finns två par så det finns tre olika kombinationer till exempel 22334, 23344, 22344
         if (tal[0] == tal[1] && tal[2] == tal[3]){
             number = tal[0] + tal[1] + tal[2] + tal[3];
         }
         else if (tal[1] == tal[2] && tal[3] == tal[4]){
             number = tal[1] + tal[2] + tal[3] + tal[4];
         }
         else if (tal[0] == tal[1] && tal[3] == tal[4]){
             number = tal[0] + tal[1] + tal[3] + tal[4];
         }
          
        if (!check.equals("") && spelare1 == true ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
        }
          if (!check2.equals("") && spelare1 == false ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
         
        }
        
        if(check.compareTo("")== 0 && spelare1 == true){
        lbl2par1.setText(Integer.toString(number));
        spelare1 = false;
        lasSpelare(spelare1);
        total+=number;
        lblTotalt1.setText(Integer.toString(total));
        }
        else{
            
        lbl2par2.setText(Integer.toString(number)); 
        spelare1 = true;
        lasSpelare(spelare1);
        total2+=number;
        lblTotalt2.setText(Integer.toString(total2));
        }
        
        BorjaOm();
        if(check.isEmpty() && check2.isEmpty() ){
        btn2par.setEnabled(true); 
        }
        else {
        btn2par.setEnabled(false);     
        } 
        WhoWins(); 
    }//GEN-LAST:event_btn2parActionPerformed

    private void btnTretalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTretalActionPerformed
     String check = lblTretal1.getText();
        String check2 = lblTretal2.getText();
        int tal[]; //skapa fältet 
       try{
         tal = lasInTal();
       }
       catch (java.lang.NumberFormatException e){
            JOptionPane.showMessageDialog(null,
                    "Du måste slå innan du kan välja kategori.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
           return;
        }
         SorteraFallande(tal);
         int number = 0;
         // här kontrollerar det om det finns tre lika talen 
         // det finns 3 olika kombinationer med sorterade talen t.ex. 11122, 12223, 12333
         if (tal[0] ==tal[2] ){
             number = tal[0] + tal[1] + tal[2];
         }
         else if (tal[1] ==tal[3] ){
             number = tal[1] + tal[2] + tal[3];
         }
         else if (tal[2] == tal[4] ){
             number = tal[2] + tal[3] + tal[4];
         }
       
        if (!check.equals("") && spelare1 == true ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
        }
          if (!check2.equals("") && spelare1 == false ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
         
        }
        
         if(check.compareTo("")== 0 && spelare1 == true){
        lblTretal1.setText(Integer.toString(number));
        spelare1 = false;
        lasSpelare(spelare1);
        total+=number;
        lblTotalt1.setText(Integer.toString(total));
        }
        else{
           
        lblTretal2.setText(Integer.toString(number)); 
        spelare1 = true;
        lasSpelare(spelare1);
        total2+=number;
        lblTotalt2.setText(Integer.toString(total2));
        }
        
        BorjaOm();
        if(check.isEmpty() && check2.isEmpty() ){
        btnTretal.setEnabled(true); 
        }
        else {
        btnTretal.setEnabled(false);     
        }      
        WhoWins();     
         
    }//GEN-LAST:event_btnTretalActionPerformed

    private void btnFyrtalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFyrtalActionPerformed
     String check = lblFyrtal1.getText();
        String check2 = lblFyrtal2.getText();
        int tal[]; //skapa fältet 
       try{
         tal = lasInTal();
       }
       catch (java.lang.NumberFormatException e){
            JOptionPane.showMessageDialog(null,
                    "Du måste slå innan du kan välja kategori.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
           return;
        }
       
         SorteraFallande(tal);
         int number = 0;
         // här kontrollerar det om det finns fyra lika talen 
         // det finns 2  kombinationer med sorterade talen t.ex. 11112, 12222
         if (tal[0] == tal[3]){
             number = tal[0] + tal[1] + tal[2] + tal[3];
         }
         else if (tal[1] == tal[4]){
             number = tal[1] + tal[2] + tal[3] + tal[4];
         }
         
         
        
         if (!check.equals("") && spelare1 == true ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
        }
          if (!check2.equals("") && spelare1 == false ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
         
        }
         
         if(check.compareTo("")== 0 && spelare1 == true){
        lblFyrtal1.setText(Integer.toString(number));
        spelare1 = false;
        lasSpelare(spelare1);
        total+=number;
        lblTotalt1.setText(Integer.toString(total));
        }
        else{
            
        lblFyrtal2.setText(Integer.toString(number)); 
        spelare1 = true;
        lasSpelare(spelare1);
        total2+=number;
        lblTotalt2.setText(Integer.toString(total2));
        }
        
        BorjaOm();
        if(check.isEmpty() && check2.isEmpty() ){
        btnFyrtal.setEnabled(true); 
        }
        else {
        btnFyrtal.setEnabled(false);     
        } 
        WhoWins(); 
    }//GEN-LAST:event_btnFyrtalActionPerformed

    private void btnLitenStageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLitenStageActionPerformed
        String check = lblLitenStage1.getText();
        String check2 = lblLitenStage2.getText();
        int tal[]; //skapa fältet 
        try{
         tal = lasInTal();
        }
        catch (java.lang.NumberFormatException e){
            JOptionPane.showMessageDialog(null,
                    "Du måste slå innan du kan välja kategori.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
           return;
        }
         SorteraStigande(tal);
         int number = 0;
         // här kontrollerar det om det finns liten stage dvs 12345 
         // det är lätt om man har sorterat talen och bara titta om första är lika med 1 , andra med 2 .....
         if (tal[0] == 1 && tal[1] == 2 && tal[2] == 3 && tal[3] == 4 && tal[4] == 5){
             number += 15;
         }  
         if (!check.equals("") && spelare1 == true ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
        }
          if (!check2.equals("") && spelare1 == false ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
         
        }
         
         if(check.compareTo("")== 0 && spelare1 == true){
        lblLitenStage1.setText(Integer.toString(number));
        spelare1 = false;
        lasSpelare(spelare1);
        total+=number;
        lblTotalt1.setText(Integer.toString(total));
        }
        else{
            
        lblLitenStage2.setText(Integer.toString(number)); 
        spelare1 = true;
        lasSpelare(spelare1);
        total2+=number;
        lblTotalt2.setText(Integer.toString(total2));
        }
          
        
        BorjaOm();
        if(check.isEmpty() && check2.isEmpty() ){
        btnLitenStage.setEnabled(true); 
        }
        else {
        btnLitenStage.setEnabled(false);     
        } 
        WhoWins();   
         
       
    }//GEN-LAST:event_btnLitenStageActionPerformed

    private void btnStorStageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStorStageActionPerformed
        String check = lblStorStage1.getText();
        String check2 = lblStorStage2.getText();
        int tal[]; //skapa fältet 
       try{
         tal = lasInTal();
       }
       catch (java.lang.NumberFormatException e){
            JOptionPane.showMessageDialog(null,
                    "Du måste slå innan du kan välja kategori.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
           return;
        }
         SorteraStigande(tal);
         int number = 0;
         // här kontrollerar det om det finns stor stage dvs 23456 
         // det är lätt om man har sorterat talen och bara titta om första är lika med 2 , andra med 3 .....
         if (tal[0] == 2 && tal[1] == 3 && tal[2] == 4 && tal[3] == 5 && tal[4] == 6){
             number += 20;
         } 
        if (!check.equals("") && spelare1 == true ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
        }
          if (!check2.equals("") && spelare1 == false ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
         
        }
        
         if(check.compareTo("")== 0 && spelare1 == true){
        lblStorStage1.setText(Integer.toString(number));
        spelare1 = false;
        lasSpelare(spelare1);
        total+=number;
        lblTotalt1.setText(Integer.toString(total));
        }
        else{
          
        lblStorStage2.setText(Integer.toString(number)); 
        spelare1 = true;
        lasSpelare(spelare1);
        total2+=number;
        lblTotalt2.setText(Integer.toString(total2));
        }
          
       
        BorjaOm();
        if(check.isEmpty() && check2.isEmpty() ){
        btnStorStage.setEnabled(true); 
        }
        else {
        btnStorStage.setEnabled(false);     
        } 
       WhoWins(); 
    }//GEN-LAST:event_btnStorStageActionPerformed

    private void btnKakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKakActionPerformed
        String check = lblKak1.getText();
        String check2 = lblKak2.getText();
        int tal[]; //skapa fältet 
      try{
         tal = lasInTal();
      }
      catch (java.lang.NumberFormatException e){
            JOptionPane.showMessageDialog(null,
                    "Du måste slå innan du kan välja kategori.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
           return;
        }
         SorteraFallande(tal);
         int number = 0;
         // här kontrollerar det om det finns kak t.ex 22333 
         // det är lätt om man har sorterat talen och det finns två kombinationer t.ex. 22333, 22233
         if (tal[0] == tal[1] && tal[2] == tal[4]){
         number = tal[0] + tal[1] + tal[2] + tal[3] + tal[4];    
         }
         else if (tal[0] == tal[2] && tal[3] == tal[4] ) {
             number = tal[0] + tal[1] + tal[2] + tal[3] + tal[4];
         }
         if (!check.equals("") && spelare1 == true ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
        }
          if (!check2.equals("") && spelare1 == false ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
         
        }
         
        if(check.compareTo("")== 0 && spelare1 == true){
        lblKak1.setText(Integer.toString(number));
        spelare1 = false;
        lasSpelare(spelare1);
        total+=number;
        lblTotalt1.setText(Integer.toString(total));
        }
        else{
          
        lblKak2.setText(Integer.toString(number)); 
        spelare1 = true;
        lasSpelare(spelare1);
        total2+=number;
        lblTotalt2.setText(Integer.toString(total2));
        }
          
        
        BorjaOm();
        if(check.isEmpty() && check2.isEmpty() ){
        btnKak.setEnabled(true); 
        }
        else {
        btnKak.setEnabled(false);     
        } 
        WhoWins(); 
    }//GEN-LAST:event_btnKakActionPerformed

    private void btnChansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChansActionPerformed
       String check = lblChans1.getText();
        String check2 = lblChans2.getText();
        int tal[]; //skapa fältet 
       try{
         tal = lasInTal();
       }
       catch (java.lang.NumberFormatException e){
            JOptionPane.showMessageDialog(null,
                    "Du måste slå innan du kan välja kategori.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
           return;
        }
         int number = 0;
         // här måste man inte sortera talen man bara beräknar värde från alla tärningar 
       number=tal[0] + tal[1] + tal[2] + tal[3] + tal[4];
       if (!check.equals("") && spelare1 == true ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
        }
          if (!check2.equals("") && spelare1 == false ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
         
        }
       
       if(check.compareTo("")== 0 && spelare1 == true){
        lblChans1.setText(Integer.toString(number));
        spelare1 = false;
        lasSpelare(spelare1);
        total+=number;
        lblTotalt1.setText(Integer.toString(total));
        }
        else{
         
        lblChans2.setText(Integer.toString(number)); 
        spelare1 = true;
        lasSpelare(spelare1);
        total2+=number;
        lblTotalt2.setText(Integer.toString(total2));
        }
          
        BorjaOm();
        if(check.isEmpty() && check2.isEmpty() ){
        btnChans.setEnabled(true); 
        }
        else {
        btnChans.setEnabled(false);     
        }
        WhoWins(); 
    }//GEN-LAST:event_btnChansActionPerformed

    private void btnYatzyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYatzyActionPerformed
        String check = lblYatzy1.getText();
        String check2 = lblYatzy2.getText();
        int tal[]; //skapa fältet 
        try{
         tal = lasInTal();
        }
        catch (java.lang.NumberFormatException e){
            JOptionPane.showMessageDialog(null,
                    "Du måste slå innan du kan välja kategori.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
           return;
        }
         int number = 0;
         // här måste man också inte sortera talen , man bara tittar om alla tärningar är lika 
        if (tal[0] == tal[1] && tal[0] == tal[2] && tal[0] == tal[3] && tal[0] == tal[4]){
            // här kontrollerar det vilka talen är lika om det är ettor så summerar det alla ettor och lagrar dem i number variablen och så vidare
        number+=50;
        } 
        if (!check.equals("") && spelare1 == true ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
        }
          if (!check2.equals("") && spelare1 == false ){
         JOptionPane.showMessageDialog(null,
                    "Du kan inte välja samma kategori två gånger.",
                    "Meddelande",
                    JOptionPane.ERROR_MESSAGE);
         
         
         return;
         
        }
         if(check.compareTo("")== 0 && spelare1 == true){
        lblYatzy1.setText(Integer.toString(number));
        spelare1 = false;
        lasSpelare(spelare1);
        total+=number;
        lblTotalt1.setText(Integer.toString(total));
        }
        else{
         
        lblYatzy2.setText(Integer.toString(number)); 
        spelare1 = true;
        lasSpelare(spelare1);
        total2+=number;
        lblTotalt2.setText(Integer.toString(total2));
        }
        BorjaOm();
        if(check.isEmpty() && check2.isEmpty() ){
        btnYatzy.setEnabled(true); 
        }
        else {
        btnYatzy.setEnabled(false);     
        }
        WhoWins(); 
    }//GEN-LAST:event_btnYatzyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(YatzyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(YatzyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(YatzyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(YatzyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new YatzyFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1par;
    private javax.swing.JButton btn2par;
    private javax.swing.JButton btnBonus;
    private javax.swing.JButton btnChans;
    private javax.swing.JButton btnEttor;
    private javax.swing.JButton btnFemmor;
    private javax.swing.JButton btnFyror;
    private javax.swing.JButton btnFyrtal;
    private javax.swing.JButton btnKak;
    private javax.swing.JButton btnKasta;
    private javax.swing.JButton btnLitenStage;
    private javax.swing.JButton btnSexor;
    private javax.swing.JButton btnStorStage;
    private javax.swing.JButton btnSumma;
    private javax.swing.JButton btnTarning1;
    private javax.swing.JButton btnTarning2;
    private javax.swing.JButton btnTarning3;
    private javax.swing.JButton btnTarning4;
    private javax.swing.JButton btnTarning5;
    private javax.swing.JButton btnTotalt;
    private javax.swing.JButton btnTreor;
    private javax.swing.JButton btnTretal;
    private javax.swing.JButton btnTvaor;
    private javax.swing.JButton btnYatzy;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lbl1par1;
    private javax.swing.JLabel lbl1par2;
    private javax.swing.JLabel lbl2par1;
    private javax.swing.JLabel lbl2par2;
    private javax.swing.JLabel lblBonus1;
    private javax.swing.JLabel lblBonus2;
    private javax.swing.JLabel lblChans1;
    private javax.swing.JLabel lblChans2;
    private javax.swing.JLabel lblEttor1;
    private javax.swing.JLabel lblEttor2;
    private javax.swing.JLabel lblFemmor1;
    private javax.swing.JLabel lblFemmor2;
    private javax.swing.JLabel lblFyror1;
    private javax.swing.JLabel lblFyror2;
    private javax.swing.JLabel lblFyrtal1;
    private javax.swing.JLabel lblFyrtal2;
    private javax.swing.JLabel lblKak1;
    private javax.swing.JLabel lblKak2;
    private javax.swing.JLabel lblLitenStage1;
    private javax.swing.JLabel lblLitenStage2;
    private javax.swing.JLabel lblSexor1;
    private javax.swing.JLabel lblSexor2;
    private javax.swing.JLabel lblSpelare1;
    private javax.swing.JLabel lblSpelare2;
    private javax.swing.JLabel lblSpelareEtt;
    private javax.swing.JLabel lblSpelareTva;
    private javax.swing.JLabel lblStorStage1;
    private javax.swing.JLabel lblStorStage2;
    private javax.swing.JLabel lblSumma1;
    private javax.swing.JLabel lblSumma2;
    private javax.swing.JLabel lblTotalt1;
    private javax.swing.JLabel lblTotalt2;
    private javax.swing.JLabel lblTreor1;
    private javax.swing.JLabel lblTreor2;
    private javax.swing.JLabel lblTretal1;
    private javax.swing.JLabel lblTretal2;
    private javax.swing.JLabel lblTvaor1;
    private javax.swing.JLabel lblTvaor2;
    private javax.swing.JLabel lblYatzy1;
    private javax.swing.JLabel lblYatzy2;
    // End of variables declaration//GEN-END:variables
}
